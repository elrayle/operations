# This workflow will build a docker image, push it to ghcr.io, and deploy it to an Azure WebApp.
# main - This tag coordinates the other reusable parts of this workflow.
#   * app-build-docker-image.yml
#   * app-deploy-to-azure.yml
#   * app-is-deployable.yml
name: Build and Deploy to prod service app

on:
  workflow_call:

    inputs:
      deploy-env:
        description: 'environment to deploy (i.e. dev | prod)'
        required: true
        type: string
      application-type:
        description: 'application type (i.e. api | worker | ui) - used as a label on the Docker image'
        required: true
        type: string
      azure-app-base-name:
        description: 'Azure application name of webapp to deploy (i.e. clearlydefined-api | cdcrawler | clearlydefined)'
        required: true
        type: string
      azure-app-name-postfix:
        description: 'postfix to apply to the base name for the primary deploy site (e.g. -prod, -dev)'
        required: true
        type: string
      secondary-azure-app-name-postfix:
        description: 'postfix to apply to the base name for a secondary deploy site (e.g. -prod-europe, do not specify if no secondary site)'
        type: string
        default: ''

jobs:
  determine-trigger:
    name: Determine if this was triggered by a release or workflow_dispatch
    runs-on: ubuntu-latest
    outputs:
      is-release: ${{ env.IS_RELEASE }}
    steps:
      - name: Check if this was triggered by a release
        id: release
        run: |
          echo "IS_RELEASE"=${{ github.event_name == 'release' }} >> $GITHUB_ENV

  get-version:
    name: Get version from package-lock.json
    runs-on: ubuntu-latest
    needs: determine-trigger
    outputs:
      version: ${{ env.VERSION }}
    steps:
      - name: Download package-lock.json
        uses: actions/download-artifact@v4
        with:
          name: package-lock.json
          path: .
      - name: Checkout this repo
        uses: actions/checkout@v4.1.1
        with:
          repository: 'elrayle/operations'
          ref: 'main'
          path: 'operations'
      - name: Get version from package-lock.json
        id: get_version
        shell: bash
        run: |
          script_log=$(./operations/scripts/app-workflows/get-version.sh \
            ${{ inputs.deploy-env }} \
            ${{ needs.determine-trigger.outputs.is-release }} \
            ${{ github.event.release.tag_name }} \
            ${{ github.sha }}) || (echo "$script_log" && exit 1)
          echo -e "---- script log\n$script_log\n----"; \
          version=$(echo "$script_log" | tail -n 1)
          echo "VERSION=$version" >> $GITHUB_ENV

  validate-version:
    runs-on: ubuntu-latest
    needs: get-version
    steps:
      - name: Validate version
        run: |
          version=${{ needs.get-version.outputs.version }}
          echo "version: $version"
          if [[ -z "$version" ]]; then
            echo "No version found, exiting"
            exit 1
          fi
          
  build-and-publish-image:
    name: Build and publish Docker image
    needs: get-version
    uses: elrayle/operations/.github/workflows/app-build-docker-image.yml@main
    # secrets:
    #   DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
    #   PRODUCTION_DEPLOYERS: ${{ secrets.PRODUCTION_DEPLOYERS }}
    with:
      deploy-env: ${{ inputs.deploy-env }}
      application-type: ${{ inputs.application-type }}
      image-tag: ${{ needs.get-version.outputs.version }}
